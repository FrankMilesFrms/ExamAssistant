`
在数据管理技术的发展过程中，经历了人工管理阶段文件系统阶段和数据库系统阶段。在这几个阶段中，数据独立性最高的是【数据库系统】阶段。
`
数 据 库 的 概 念 模 型 独 立 于【具体的机器和 DBMS】 。
`
【数据库】是存储在计算机内有结构的数据的集合。
`
数据库存储的是【数据以及数据之间的联系】。
`
 数据库中，数据的物理独立性是【用户的应用程序与存储在磁盘上数据库中的数据是相互独立的】。
`
下述关于数据库系统的正确叙述是答案【数据库系统减少了数据冗余】
`
 数据库(DB)数据库系统(DBS)和数据库管理系统(DBMS)三者之间的关系是【DBS 包括 DB 和 DBMS】。
`
 在数据库中，产生数据不一致的根本原因是【数据冗余】。
`
 数 据 库 管 理 系 统 (DBMS) 是【系统软件】。
`
 数据库管理系统(DBMS)的主要功能是【定义数据库】 。
`
 数据库系统的特点是 【数据共享】 数据独立减少数据冗余避免数据不一致和加强了数据保护。
`
 数据库系统的最大特点是 【数据的三级抽象和二级独立性】。
`
 数据库管理系统能实现对数据库中数据的查询插入修改和删除等操作，这种功能称为 【数据操纵功能】。
`

 数 据 库 管 理 系 统 是【在操作系统支持下的系统软件】。
`
据库的三级模式结构中，描述数据库中全体数据的全局逻辑结构和特征的是【模式】
`

 数据库系统的数据独立性是指【不会因为系统数据存储结构与数据逻辑结构的变化而影响应用程序】。
`
信息世界中的术语，与之对应的数据库术语为【记 录】。

 传统的数据模型分类，数据库系统可以分为三种类型【层次网状和关系】。
`
 数据库系统的核心和基础是【数据模型】
`
 下列四项中，不属于数据库系统的特点的是【数据冗余度大	】
`
 概念模型是现实世界的第一层抽象，这一类模型中最著名的模型是【实体-联系模型	】
`
 要保证数据库的逻辑数据独立性，需要修改的是【模式与外模式之间的映象	】
`
 关系数据模型的基本数据结构是【	关系】
`
 有一名为“列车运营”实体，含有：车次日期实际发车时间实际抵达时间情况摘要等属性，该实体主码是【	车次+日期】
　`
　 数据库的三级模式是指【外模式模式内模式 】
`
相对于非关系模型，关系数据模型的缺点之一是【存取路径对用户透明，DBMS 需查询优化	】。
　`
数据的逻辑独立性是指【模式改变，外模式和应用程序不变	】
　`
下列四项中，不属于数据库系统的主要特点的是【	程序的标准化】。
　`
 数 据 库 的 基 本 特 点 是【数据可以共享(或数据结构化), 数据独立性,数据冗余小，易扩充,统一管理和控制】。
`
在数据管理技术的发展过程中，经历了【人工管理,文件系统,数据库系统】阶段。
`
 数据库的三级模式包括【外 模 式,内 模 式,模 式】
`
 数将数据库的结构划分成多个层次，是为了提高数据库的【逻辑独立性,物理独立性】。
`
数据库系统对硬件的较高要求是【足够大的内存，足够大的磁盘或磁盘阵列，较高的通道能力】 。
`
 【对】数据冗余可能导致的问题有浪费存储空间及修改麻烦和潜在的数据不一致性。
`
 【对】实体之间的联系可抽象为三类，它们是【】1∶1 1∶m 和【】m∶n。
`
 【对】数据库体系结构按照 模式  外模式 和 内模式 三级结构进行组织。
`
 【错】数据结构是对数据系统的动态特性的描述，数据操作是对数据库系统的静态特性的描述。
解析：前者是静态描述，后者是动态描述。
`
 【对】数据模型是由数据结构数据操作和完整性约束三部分组成的。
`
 【错】概念模型属于机器世界  解析：概念模型应属于信息世界。
`
 【对】数据库是长期存储在计算机内的有组织可共享的大量的数据的集合
`
 【错】数据库管理员是开发数据库的专门人员。 答案：。解析：应是管理数据库的专门人员。
 `
关系数据库管理系统应能实现的专门关系运算包括【选择投影连接】。

`
关 系 模 型 中 ， 一 个 关 键 字 是 【可由一个或多个其值能唯一标识该关系模式中任何元组的属性组成】。
`
自然连接是构成新关系的有效方法。一般情况下，当对关系 R 和 S 使用自然连接时，要求 R 和 S 含有一个或多 个 共 有 的【属 性】。
`
关系运算中花费时间可能最长的运算是【笛卡尔积】。
`
关 系 模 式 的 任 何 属 性【不可再分】。
`
在关系代数运算中，五种基本运算为【并差选择投影乘积】。
`
设有关系 R，按条件f 对关系R 进行选择，正确的是【of(R)】。
`
如图所示，两个关系 R1 和 R2，它们进行【连接】运算后得到 R3。
`
己知关系 R 和 S，R∩S 等价于【S-(S-R)	】
 关系代数的运算包括： 【交 ，并 ，笛 卡 尔 积，连 接】
`
  关系代数运算中，传统的集合运算有:【交,并,笛卡尔积】

`
 关系代数运算中，专门的关系运算有【投 影，连 接】
`
 关系的完整性约束包括【实体完整性 ，参照完整性，用户定义完整性】
`
 关系模式的构成包括【属性名集合,关系名, 属性来自的域 ,属性向域的映射】
`
 常用的关系操作有【查 询 ,插 入,删 除 ,修 改 答 案】
`
 【对】已知系(系编号，系名称，系主任，电话，地点)， 系关系的主码是系编号。
`
 【对】在关系模型中，实体和实体间的联系都是用关系来表示的。
`
 【错】关系是静态的稳定的，关系模式是动态的随时间变化的。
`
 【对】候选码的值可以唯一地表示关系中的一个元组。
`
 【对】候选码的属性称为主属性。
`
【错】参照完整性是指基本关系 R 的主属性不能取空值。
`
 【对】关系的类型有基本关系查询表和视图表。
`
 【错】表中不同的列不能出自同一个域。
`
 【错】任意两个元组的候选码可以相同。
`
 【对】关系中行的顺序和列的顺序都可以交换。
`
 【对】关系的外码是允许有空值的。
`
SQL 语 言 是【非过程化】的 语 言 ， 易 学 习 。
`
SQL 语 言 是 【关系数据库】语 言 。
`
SQL 语 言 具 有【数据定义数据操纵数据控制】的 功 能 。
`
假定学生关系是 S(S#，SNAME，SEX，AGE)，课程关系是 C(C#，CNAME，TEACHER)，学生选课关系是 SC(S#，C#， GRADE)。 要查找选修“COMPUTER”课程的“女”学生姓名，将涉及到关系【S，C，SC】。
`
【(‘1031’，‘曾华’，NULL，NULL)】若用如下的 SQL 语句创建一个 student 表【 (‘1031’，‘曾华’，NULL，NULL)】CREATE TABLE student(NO Char(4) NOT NULL， NAME Char (8) NOT NULL， SEX Char (2)， AGE int ) 可 以 插 入 到 student 表 中 的 是【(‘1031’，‘曾华’，NULL，NULL)】。
`
 【'5021'，'刘祥'，NULL，NULL】学校数据库中有学生和宿舍两个关系:学生【学号，姓名】和 宿舍【楼名，房间号，床位号，学号】假设有的学生不住宿，床位也可能空闲。如果要列出所有学生住宿和宿舍分配的情况，包括没有住宿的学生和空闲的床位，则应执行【全外联接】用下面的 T-SQL 语句建立一个基本表CREATE TABLE Student(Sno CHAR(4) PRIMARY KEY,Sname CHAR(8) NOT NULL, Sex CHAR(2),Age INT)可以插入到表中的元组是【'5021'，'刘祥'，NULL，NULL】
`
下面哪个不是数据库系统必须提供的数据控制功能【可移植性】。
`
保护数据库，防止未经授权的或不合法的使用造成的数据泄漏更改破坏。这是指数据的【安全性】。
`
在数据系统中，对存取权限的定义称为【授权】。
`
数据库管理系统通常提供授权功能来控制不同用户访问数据的权限， 这主要是为了实现数据库的【安 全 性】。
  `
下列 SQL 语句中，能够实现“收回用户 ZHAO 对学生表【STUD】中学号【XH】的修改权”这一功能的是【REVOKE UPDATE(XH) ON STUD FROM ZHAO】
     `
把对关系 SC 的属性 GRADE 的修改权授予用户 ZHAO 的 SQL 语句是【GRANT UPDATE (GRADE) ON SC TO ZHAO】
`
 把对关系 SPJ 的属性QTY 的修改权授予用户李勇的T-SQL 语句是【GRANT UPDATE (QTY) ON SPJ TO 李勇	】
　`
 保护数据安全性的一般方法是【设置用户标识,存取权限控制】
`
 安全性控制的一般方法有【用户标识鉴定,存取控制,审计,数据加密】

　　　`
在 SQL 语言中，为了数据库的安全性，设置了对数据的存取进行控制的语句，对用户授权收回所授的权限的语句是【GRANT,REVOKE】
`
 DBMS 存取控制机制主要包括两部分【自主存取控制】【强制存取控制】。
`
 计算机的三类安全问题包括【技术安全,管理安全,政策法律】
`
在数据库系统中，保证数据及语义正确和有效的功能是 【完整性控制	】
`
关于主键约束以下说法错误的是【允许空值的字段上可以定义主键约束 】
`
数据库的【完整性】是指数据的正确性和相容性。

在数据库的表定义中，限制成绩属性列的取值在 0 到 100 的范围内，属于数据的【用户自定义】约束。
`
有一个关系：学生【学号，姓名，系别】，规定学号的值域是 8 个数字组成的字符串，这一规则属于【	用户自定义完整性约束】。
`
数据库的完整性是指数据的【实体完整性， 参照完整性，用户定义完整性】
`
 数据库的完整性是指【数据库的正确性,数据库的相容性】
`
 为了维护完整性，DBMS 提供【定义完整性的机制,完整性检查的方法,违约处理的方法】
`
 DBMS 进行实体完整性检查时的操作包括【检查主码是否唯一,检查主码各属性是否为空,主码不唯一就拒绝插入或修改,主码各属性有为空时就拒绝插入或修改】
`
 属于用户定义完整性的有【不允许取空值，列值唯一，用 CHECK 短语指定列值应满足的条件】
`
实体完整性是指在基本表中【主属性不能取空值】
`
参照完整性是指在基本表中【外码可以是空值或者另一个关系主码的有效值】
`
为了保护数据库的实体完整性，当用户程序对主码进行更新使主码值不惟一时，DBMS 就【拒绝此操作】
`
 设计性能较优的关系模式称为规范化，规范化主要的理论依据是【关系规范化理论】。
`
当关系模式 R(A，B)已属于 3NF，下列说法中【仍存在一定的插入和删除异常】是正确的。
`
关系模型中的关系模式至少是【1NF】。
`
消除了部分函数依赖的 1NF 的关系模式，必定是【2NF】 。
`
 关系规范化中的删除异常是指 【不该删除的数据被删除】
  `
 有关系模式 A(S，C，M)，其中各属性的含义是S:学生；C :课程；M:名次，其语义是:每一个学生选修每门课程的成绩有一定的名次，每门课程中每一名次只有一个学生(即没有并列名次)，则关系模式 A 最高达到【BCNF】
`

 关系规范化中的删除操作异常插入操作异常是指【不该删除的数据被删除,应该插入的数 据 未 被 插 入】。
 `
 不规范的关系模式可能存在的问题是【插 入 异 常,删 除 异 常, 更 新 异 常 ,冗 余 太 大】
`
 数据依赖中最重要的是【多 值 依 赖,函 数 依 赖】
`
【对】关系模式的分解不唯一 。
`
 【对】关系模式的候选码可以有多个，主码只能有一个。
`
 【对】关系规范化过程中，是可以逐步达到 2NF3NF 及更高的等级。
`
 【对】规范化实质是概念的单一化，即让一个关系描述一个概念一个实体或者实体间的一种联系。若多余一个概 念就把它分离出去。
`
 在数据库设计中，用E-R 图来描述信息结构但不涉及信息在计算机中的表示，它是数据库设计的【概念设计】阶段。
`
在关系数据库设计中，设计关系模式是【逻辑设计阶段】的任务。
`
 数据库物理设计完成后，进入数据库实施阶段，下列各项中不属于实施阶段的工作是【扩充功能】
`
在数据库的概念设计中，最常用的数据模型是【实 体 联 系 模 型】。
`
从 E-R 模型关系向关系模型转换时，一个 M∶N 联系转换为关系模型时，该关系模式的码是【M 端实体码与 N 端实体码的组合】。
`
当局部 E-R 图合并成全局 E-R 图时可能出现冲突，不属于合并冲突的是【语法冲突】。
`
概 念 模 型 独 立 于【硬件设备和 DBMS】。
`
数据流程图DFD是用于描述结构化方法中【需求分析】阶段的工具。
`
下图所示的 E-R 图转换成关系模型，可以转换为【3 个】关系模式。
  `
 “对关系的哪些字段建立什么样的索引”这一设计内容应该属于数据库【物 理】设计阶段。
`
 在 E-R 模型中，如果有 3 个不同的实体型，3 个 m:n 联系，根据 E-R 模型转换为关系模型的规则，转换后关系的数目为【6】。
     `
 从E-R 模型关系向关系模型转换时，一个 M:N 联系转换为关系模式时，该关系模式的关键字是【M 端实体关键字与N 端实体关键字组合】。
`
在设计分 E-R 图时，由于各个子系统分别有的应用，而且往往是由不同的设计人员设计的，所以各个分 E-R
图之间难免有不一致的地方，这些冲突主要有【属性冲突,命名冲突,结构冲突】。
`
属于数据库设计的步骤是【需求分析,概念结构设计 ,逻辑结构设计,物理结构设计】。
`
 数据字典包括【数据项 ,数据结构, 数据流,数据存储和数据加工过程】
`
 定义用户外模式时应注意【使用更符合用户习惯的别名,对不同级别用户定义不同的视图,简化用户的使用】
`
 满足以下准则的事物，可作为属性看待【作为属性，不能再有需要描述的性质  属性不能与其他实体发生联系】
`
 简单的全表扫描方法的特点是【逐一检查每个元组】
`
查询树是用于何种优化的工具【代数优化】？
`
 应该尽量先做的运算是【选 择】
`
物理优化的目的是【选 择 高 效 合 理 的 操 作 算 法 和 存 取 路 径】
　　`
对于小关系，选择操作的启发式规则是【使用全表扫描】
`
 如果两个表都在连接属性上进行了排序，连接操作的启发式规则是【选排序-合并方法】
`
查询树的启发式规则有【选择运算尽可能先做，在一个对象上的投影和选择同时进行，把笛卡尔积与选择结合起来做连接运算，把投影与它之前或之后的双目运算结合起来】
`
等值连接的常用方法有【嵌套循环方法,排序-合并方法 ,索引连接方法,HASH JOIN 方法】
`
 查询处理步骤包括【查 询 分 析 ,查 询 检 查 ,查 询 优 化, 查 询 执 行】
`
【事 务】是 DBMS 的基本单位，它是用户定义的一组逻辑一致的程序序列。
`
事 务 的 原 子 性 是 指【事务中包括的所有操作要么都做，要么都不做】。
`
事 务 的 一 致 性 是 指【事务必须是使数据库从一个一致性状态 变 到 另 一 个 一 致 性 状 态】。
`
事 务 的 隔 离 性 是 指【一个事务内部的操作及使用的数据对并发的其他事务是隔离的】。
`
事 务 的 持 续 性 是 指 【事务一旦提交，对数据库的改变是永久的】。
`
若系统在运行过程中，由于某种原因，造成系统停止运行，致使事务在执行过程中以非控制方式终止，这时内存中的信息丢失，而存储在外存上的数据未受影响，这种情况称为【系统故障】 。
`
若系统在运行过程中，由于某种硬件故障，使存储在外存上的数据部分损失或全部损失，这种情况称为【介质故障】。
`
 【日志文件】用来记录对数据库中数据进行的每一次更新操作。
`
用 于 数 据 库 恢 复 的 重 要 文 件 是【日志文件】。
`
数据库恢复的基础是利用转储的冗余数据。这些转储的冗余数据包括【日志文件数据库后备副本】。
`
 事务的隔离性是指【一个事务内部的操作及使用的数据对并发的其他事务是隔离的	】。

`
【日志文件】用来记录对数据库中数据进行的每一次更新操作。
`
事务是数据库运行的基本单位。如果一个事务执行成功，则全部更新提交；如果一个事务执行失败，则已做过的更新被恢复原状，好像整个事务从未有过这些更新，这样保持了数据库处于【一致性	】状态。
`
 数据库系统在运行过程中，可能会发生故障。故障主要有【事 务 故 障, 系 统 故 障,介 质 故 障, 计 算 机 病 毒】
`
 数据库系统是利用存储在外存上其他地方的冗余数据来重建被破坏的数据库。它主要有
【后 援 副 本,日 志 文 件】
`
 事务具有【原子性(Atomicity),一致性(consistency), 隔离性( Isolation ) ,持续性(Durability )】特性
`
 事务以【提 交,撤 销】为终止。
`
 【错】事务由单一的 SQL 语句组成。
 `
 【对】事务的原子性是指事务的所有操作要么全做，要么全不做。
 `
 【对】很多故障都可能破坏数据库的一致性。
 `
 【对】数据转储分为静态转储和动态转储。
 `
 【对】发生介质故障后一般必须重新装入数据库。
 `
 【对】数据库镜像可以避免介质故障带来损失。
 `
【错】必须先写数据库，后写日志文件
`
 【对】事务故障恢复和系统故障恢复必须使用日志文件
 `
设有两个事务T1、T2，其并发操作如下所示，下面评价正确的是【该操作丢失修改】。T1(读A=10,A=A-5)
`
设有两个事务T1、T2，其并发操作如下所示，下面评价正确的是【该操作不能重复读】。T1(读A=10,B=5)

`
设有两个事务T1、T2，其并发操作如下所示，下列评价正确的是【该操作读“脏”数据】 T1(读A=100)

`
 解决并发操作带来的数据不一致性总是普遍采用【封锁】的技术。
`
若事务 T 对数据 R 已经加 X 锁，则其他事务对数据 R【不能加任何锁】 。
`
关于“死锁”，下列说法中正确的是【只有出现并发操作时，才有可能出现死锁】。
`
对并发操作若不加以控制，可能会带来【不 一 致】问题。
`
并发操作会带来哪些数据不一致性【丢失修改不可重复读读脏数据】。
`
若事务T 对数据对象A 加上 S 锁，则【事务T 可以读 A 但不能修改 A，其它事务只能再对A 加 S 锁，而不能加X 锁】。
	`
 设有两个事务 T1,T2，其并发操作如图 1 所示，下面评价正确的是【该操作丢失修改】 T1 读A=100
`
 以下【 Slock A Unlock A …Slock B … Xlock C …Unlock B	Unlock C】封锁违反两段锁协议。
 `
设有两个事务 T1 T2，其并发操作如图所示，下面评价正确的是【 该操作不能重复读】T1 read(A)
`
【T1】已知事务T1 的封锁序列为LOCK S(A)…LOCK S(B)…LOCK X(C)…UNLOCK(B)…UNLOCK (A) …UNLOCK (C)事务T2 的封锁序列为【】LOCK S(A) …UNLOCK (A) …LOCK S(B)…LOCK X(C) …UNLOCK (C) …UNLOCK (B)则遵守两段封锁协议的事务是【T1】
　　`
在并发控制技术中，最常用的是封锁机制，基本的封锁类型有排它锁 X 和共享锁 S，下列关于两种锁的相容性描述不正确的是【 X/X :TRUE】
`
 锁的种类有【X 锁  , S 锁 , IX 锁   , SIX 锁】
`
 并发操作带来的数据不一致性包括【不可重复读 , 丢失修改, 读脏数据】
`
对一个数据对象加 SIX 锁，表示【拟对下级对象加 X 锁,对本对象加 S 锁】
   `
两段锁协议的基本方法是【在前一阶段对数据项加锁，但不释放任何锁在释放了某个锁的后一阶段不再申请任何封锁】
`
 死锁的诊断包括 【超 时 法，等 待 图 法】
`
【对】并发控制问题来源于多用户使用数据库。
`
 【错】并发控制问题来源于有了多处理机的硬件
`
 【对】丢失修改是由两个事务修改了同一数据造成的
`
 【错】加 IS 锁是拟对上级对象加 S 锁
`
 【对】并发控制调度并发事务操作是否正确的判别准则是可串行性。
`
 【对】事务是并发控制的基本单位。
`
 【错】两段锁协议是保证可串行性的充分必要条件
`
 【对】数据库通常以封锁方法实现并发控制。
`
数据管理技术经历了【人工管，文件系
统，数据库系统】三个阶段
`
数据库是长期存储在计算机内、有【组织】的、可【共享】的数据集合
`
DBMS 是指 它是【数据库管理系统】位于【操作系统】和【用户】之间的一层管理软件。
`
数据库管理系统的主要功能有 【数据定义功能】、 【数据操纵功能】、数据库的运行管理和数据库的建立以及维护等 4 个方面。
`
数据独立性又可分为【逻辑数据独立性】和 【物理数据独立性 】。
`
当数据的物理存储改变了，应用程序不变，而由 DBMS 处理这种改变，这是指数据的【物理独立性】
`
数据库系统中最重要的软件是【DBMS】 ，最重要的人员是【DBA】
`
一个关系模式的定义格式为【关系名(属性名 1，属性名 2，…，属性名 n)】
`
一个关系模式的定义主要包括【①关系名 ②属性名 ③属性类型 ④
属性长度 ⑤关键字】
`
关系代数运算中，传统的集合运算有【①笛卡尔积 ②并 ③交
④差 】
`
关系代数运算中基本的运算是【①并 ②差 ③笛卡尔积 ④投影 ⑤选
择】
`
关系代数运算中，专门的关系运算有【①选择 ②投影 ③连接】
`
关系数据库中基于数学上两类运算是【①关系代数 ②关系演算】
`
已知系(系编号，系名称，系主任，电话，地点)和学生(学号，姓名，性别，入学日期，专业，系
编号)两个关系，系关系的主码是 【系编号 】 ，系关系的外码 ②【无】 ，学生关系的主码是 ③ 【学号】，学生关系的外
码是 ④【系编号】
`
一般情况下，当对关系 R 和 S 使用自然连接时，要求 R 和 S 含有一个或多个共有的【属性】
`
 关系数据库的实体完整性规则规定基本关系的【主属性】都不能取【空值】，在关系 A（S，SN，D）和 B（D，CN，NM）中，A 的主码是 S，B 的主码是 D，则 D 在 A 中称为【外码】
 `
关系 R 与 S 的交可以用关系代数的 5 种基本运算表示为 【R-(R-S)】
`
SQL 是【结构化查询语言】
`
视图是一个虚表，它是从【一个或几个基本表】 中导出的表。在数据库中，只存放视图的【定义】 ，不存放视图的 【视图对应的数据 】 。
`
设有如下关系表 R：R(No，NAME，SEX，AGE，CLASS)主关键字是 NO，其中 NO 为学号，NAME 为姓名，SEX 为性别，AGE 为年龄，CLASS 为班号。写出实现下列功能的 SQL 语句：
① 入一个记录(25，“李明”，“男”，21，“95031”)；【INSERT INTO R VALUES(25，“李明”，“男”，21，“95031”)】。
② 入“95031”班学号为 30、姓名为“郑和”的学生记录；【INSERT INTO R(NO，NAME，CLASS) VALUES(30，“郑和”，“95031”)】
③ 学号为 10 的学生姓名改为“王华”；【UPDATE R SET NAME=“王华”WHERE NO＝10】
④ 所有“95101”班号改为“95091”；【UPDATE R SET CLASS＝“95091”WHERE CLASS＝“95101”】
⑤ 除学号为 20 的学生记录；【⑤DELETE FROM R WHERE NO=20】。
⑥ 除姓“王”的学生记录；【DELETE FROM R WHERE NAME LIKE“%王%”】
`
在 Student 表的 Sname 列上建立一个唯一索引的 SQL 语句为：
CREATE 【unique index】 Stusname ON student(Sname)
`
SELECT 语句查询条件中的谓词“!=ALL”与运算符 【not in】 等价。
`
实体完整性是指在基本表中【主属性不能取空值 】
`
参照完整性是指在基本表中【外码可以是空值或者另一个关系主码的有效值】
`
为了保护数据库的实体完整性，当用户程序对主码进行更新使主码值不惟一时，DBMS 就【拒绝此操作 】
`
在关系 A(S，SN，D)和 B(D，CN，NM 中，A 的主键是 S，B 的主键是 D，则 D 在 S 中称为【外部键】
`
对于非规范化的模式，经过 【使属性域变为简单域】转变为 1NF，将 1NF 经过【消除非主属性对主码的部分依赖】 转变为 2NF，将 2NF 经过 【消除非主属性对主码的传递依赖】转变为 3NF
`
在关系数据库的规范化理论中，在执行“分解”时，必须遵守规范化原则：保持原有的依赖关系【无损连接性】
`
关系模式 R(A，B，C，D)中，存在函数依赖关系{A→B，A→C，A→D，（B，C）→A}，则侯选码是【A,(BC),BC】
`
已知关系 R（A，B，C，D）和 R 上的函数依赖集 F={A→C,D，C→B}，则 R∈【2】NF
`
数据库设计分为以下六个设计阶段：需求分析阶段、【概念结构设计阶段】、逻辑结构设计阶段、【物理结构设计阶段】、数据库实施阶
段、数据库运行和维护阶段
`
DBMS 的基本工作单位是事务，它是用户定义的一组逻辑一致的程序序列；并发控制的主要方法是 【封锁】机制。
`
有两种基本类型的锁，它们是【①共享锁 ②排它锁】
`
【事务】是并发控制的基本单位，是用户定义的一个数据库操作序列。
`
 存在一个等待事务集{T0，T1，…，Tn}，其中 T0 正等待被 T1 锁住的数据项，T1 正等待被 T2锁住的数据项，Tn-1 正等待被 Tn 锁住的数据项，且 Tn 正等待被 T0 锁住的数据项，这种情形称为【死锁】
 `
【可串行性】是并发事务正确性的准则
`
试述数据、数据库、数据库管理系统、数据库系统的概念。
数据是描述事物的符号记录。
数据库是长期存储在计算机内的、有组织的、可共享的数据集合。
数据库管理系统 是位于用户与操作系统之间的具有数据定义、数据操纵、数据库的运行管理、数据库的建立和维护功能的一层数据管理软件。
数据库系统是在计算机系统中引入数据库后的系统，一般由数据库、数据库管理系统(及其开发工具)、应用系统、数据库管理员和用户构成